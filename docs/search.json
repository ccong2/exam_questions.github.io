[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exam Questions",
    "section": "",
    "text": "Instructions\nAll necessary data files for this exam are uploaded to Canvas. Before you begin, take a minute to download and organize your files properly.\nStart your work in a Quarto (.qmd) document. To ensure that your rendered HTML includes all image outputs, copy and edit the following into your YAML header:\ntitle: \"Exam\"\nauthor: \"&lt;Your Name&gt;\"\nformat: \n  html:\n    embed-resources: true\nWrite out all your code for solving the questions, and include a clear statement of your final answer to a question. If you can‚Äôt complete a section, describe your problem-solving approach instead, i.e.¬†explain what you intended to do and your reasoning.\nWhen you finish, upload both your .qmd and rendered .html files to the ‚ÄúMidterm Exam‚Äù assignment submission link on Canvas.\nYou have 90 minutes to complete the exam, and practically:\n\nGroup 1: 9:35am ‚Äì 11:05am\nGroup 2: 11:05pm ‚Äì 12:35pm\n\n\n\nQuestion 1: Cleaning and Transforming\nYou are provided with a CSV file named q1_infant_hiv.csv. It records the estimated percentage of infants born to women living with HIV who received a HIV test within two months of birth, for each country or region and each year.\nThe data is formatted as follows:\n\nThe first column contains ISO3 country codes for 192 countries.\nFor each year from 2009 to 2017 (9 years in total), there are three columns (estimated percentage, lower bound, upper bound)\nA dash (-) indicates missing data.\nThe analyst tells us that the value &gt;95% means ‚Äúthe data is unreliable‚Äù.\n\nQuestions:\n\nFirst, clean the dataset by replacing all the missing and unreliable values with NA using R. (10 points).\nAfter cleaning, How many countries have available estimates (est) for all 9 years from 2009 to 2017? (5 points)\nWhat is the average percentage for Azerbaijan (AZE) over the 9 years? (5 points)\n\nYou can complete these tasks in multiple steps or create intermediate results as needed.\n\nData source: UNICEF. (2017). Early Infant Diagnosis.\n\n\n\n\nQuestion 2: Summarizing and Plotting\nYou are given a Bluebikes ridership dataset q2_bike_trips.csv. Each row represents a single trip, including information on start time, end time, start station, and end station. The dataset covers trips taken on September 3, 2025, the first day of our fall semester.\nYour tasks:\n\nCalculate how many trips occurred within each hour of the day. Use the lubridate package, focus on the start_at column (5 points).\nAfter you have that, create a graph showing the number of trips per hour. (15 points).\n\nYour graph will look similar to the follow example, but your actual results will be different.\n\n\nData source: Bluebikes System Data. (2025). Bluebikes Comprehensive Trip Histories.\n\n\n\n\nQuestion 3 Combining and Mapping\nAfter completing Question 2, you will have identified the busiest hour of the day (the hour with the most starting trips). Following on that:\n\nSingle out all trips that occurred during this busiest hour. (5 points).\nCount the number of trips starting at each station during this hour, and then remove records for stations with fewer than 10 trips (10 points).\n\nYou also have a station dataset q3_bike_stations.xlsx, which includes station names, ids, locations and total docks at each station.\n\nJoin the cleaned busiest-hour trip dataset (stations with more than 10 trips) with the station dataset. (10 points)\nVisualize these counts on a map using the stations‚Äô geographic locations to place points. Use point size to indicate the number of trips per station. Remove any stations without valid location information. Use q3_basemap.geojson as your base map. (15 points).\n\nYour maps may look similar to the following example, but your actual results can be different.\n\n\nData source:\nBluebikes System Data. (2025). Bluebikes Comprehensive Trip Histories.\nAnalyze Boston. (2025). Boston neighborhood boundary.\n\n\n\n\nQuestion 4: Trouble-shooting\nThe following code are not running correctly. Can you help identify the issues and fix them?\n\nYou want to get county-level ACS data (2019-2023) for calculating poverty rate in Massachusetts. Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (5 points).\n\nget_acs(\n  state = \"MA\",\n  geography = \"county\"\n  year = 2023,\n  table = c(\"B17001_002\", \"B17001_001\")\n)\n\nYou want to obtain total population data for two counties in Massachusetts at the census block group level, using ACS data from 2019‚Äì2023. Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (5 points).\n\nget_acs(\n  state = \"MA\",\n  county = c(\"Middlesex, Norfolk\"),\n  geography = \"blockgroups\",\n  variables = c(\"B01001_001\")\n)\n\nThe iris data is a built-in dataset in R that records measurements of iris flowers, specifically the length and width of sepals and petals, along with their species. You are taking the two columns Sepal.Length and Sepal.Width to make a simple scatterplot. But the plot does not show. (5 points).\n\niris |&gt; \n  ggplot(x = Sepal.Length, y = Sepal.Width) |&gt; \n  geom_point(color = \"red\")\n\nAlso in iris , you want to select ‚Äúsetosa‚Äù species that have a sepal length larger than 5. By looking at the dataset you know the first record satisfies this condition but the result does not show. (5 points).\n\niris |&gt; filter(Sepal.Length &gt; 5 AND Species = setosa)\n  ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüéâTHIS IS THE END OF THE EXAM üéâ"
  },
  {
    "objectID": "index.html#instructions",
    "href": "index.html#instructions",
    "title": "Exam Questions",
    "section": "",
    "text": "All necessary data files for this exam are uploaded to Canvas. Before you begin, take a minute to download and organize your files properly.\nStart your work in a Quarto (.qmd) document. To ensure that your rendered HTML includes all image outputs, copy and edit the following into your YAML header:\ntitle: \"Exam\"\nauthor: \"&lt;Your Name&gt;\"\nformat: \n  html:\n    embed-resources: true\nWrite out all your code for solving the questions, and include a clear statement of your final answer to a question. If you can‚Äôt complete a section, describe your problem-solving approach instead, i.e.¬†explain what you intended to do and your reasoning.\nWhen you finish, upload both your .qmd and rendered .html files to the ‚ÄúMidterm Exam‚Äù assignment submission link on Canvas.\nYou have 90 minutes to complete the exam, and practically:\n\nGroup 1: 9:35am ‚Äì 11:05am\nGroup 2: 11:05pm ‚Äì 12:35pm\n\n\n\nYou are provided with a CSV file named q1_infant_hiv.csv. It records the estimated percentage of infants born to women living with HIV who received a HIV test within two months of birth, for each country or region and each year.\nThe data is formatted as follows:\n\nThe first column contains ISO3 country codes for 192 countries.\nFor each year from 2009 to 2017 (9 years in total), there are three columns (estimated percentage, lower bound, upper bound)\nA dash (-) indicates missing data.\nThe analyst tells us that the value &gt;95% means ‚Äúthe data is unreliable‚Äù.\n\nQuestions:\n\nFirst, clean the dataset by replacing all the missing and unreliable values with NA using R. (10 points).\nAfter cleaning, How many countries have available estimates (est) for all 9 years from 2009 to 2017? (5 points)\nWhat is the average percentage for Azerbaijan (AZE) over the 9 years? (5 points)\n\nYou can complete these tasks in multiple steps or create intermediate results as needed.\n\nData source: UNICEF. (2017). Early Infant Diagnosis.\n\n\n\n\nYou are given a Bluebikes ridership dataset q2_bike_trips.csv. Each row represents a single trip, including information on start time, end time, start station, and end station. The dataset covers trips taken on September 3, 2025, the first day of our fall semester.\nYour tasks:\n\nCalculate how many trips occurred within each hour of the day. Use the lubridate package, focus on the start_at column (5 points).\nAfter you have that, create a graph showing the number of trips per hour.\n\nYour graph will look similar to the follow example, but your actual results will be different (10 points).\n\n\nData source: Bluebikes System Data. (2025). Bluebikes Comprehensive Trip Histories.\n\n\n\n\nAfter completing Question 2, you will have identified the busiest hour of the day (the hour with the most starting trips). Following on that:\n\nSingle out all trips that occurred during this busiest hour. (5 points).\nCount the number of trips starting at each station during this hour, and then remove records for stations with fewer than 10 trips (5 points).\n\nYou also have a station dataset q3_bike_stations.xlsx, which includes station names, ids, locations and total docks at each station.\n\nJoin the cleaned busiest-hour trip dataset (stations with more than 10 trips) with the station dataset. (10 points)\nVisualize these counts on a map using the stations‚Äô geographic locations to place points. Use point size to indicate the number of trips per station. Remove any stations without valid location information. Use q3_basemap.geojson as your base map. (15 points).\n\nYour maps may look similar to the following example, but your actual results can be different.\n\n\nData source:\nBluebikes System Data. (2025). Bluebikes Comprehensive Trip Histories.\nAnalyze Boston. (2025). Boston neighborhood boundary.\n\n\n\n\nWhat are the problems for the following code not running correctly? Please fix them.\n\nGetting the 2023 acs5 data for all . Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (5 points).\n\nget_acs(\n  state = \"MA\",\n  geography = \"county\",\n  year = 2023,\n  table = c(\"B17001_002\", \"B17001_001\")\n)\n\nGetting the 2023 acs5 data for all . Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (5 points).\n\nget_acs(\n  state = \"MA\",\n  county = c(\"Middlesex, Norfolk\"),\n  geography = \"blockgroups\"\n  variables = c(\"B01001_001\")\n)\n\niris plot (5 points).\n\ndata(iris)\niris |&gt; \n  ggplot(x = Sepal.Length, y = Sepal.Width) +\n  geom_point(color = \"red\")\n\n(5 points).\n\niris &lt;- filter(Sepal.Length &gt;"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]