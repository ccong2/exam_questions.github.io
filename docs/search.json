[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exam Questions",
    "section": "",
    "text": "Instructions\nThis exam has 4 questions, 10 points each. All necessary data files for this exam are uploaded to Canvas. You will use Quarto (.qmd) document to work on the question. When you finish, please upload both your .qmd and rendered .html files to the ‚ÄúMidterm Exam‚Äù assignment submission link on Canvas.\nYou have 90 minutes to complete the exam, and practically: [Group 1] 9:35am ‚Äì 11:05am; [Group 2] 11:05pm ‚Äì 12:35pm.\nStart your work in a Quarto document. To ensure that your rendered HTML includes all image outputs, copy and edit the following into your YAML header:\ntitle: \"Exam Answers\"\nauthor: \"&lt;Your Name&gt;\"\nformat: \n  html:\n    embed-resources: true\nexecute: \n  warning: false\nFor the questions, please write out all your code you used, and include a clear statement of your final answer to a question. If you didn‚Äôt complete a section, describe your problem-solving approach instead, i.e.¬†explain what you intended to do and your reasoning.\n\n\nQuestion 1: Cleaning and Transforming\nYou are provided with a CSV file named q1_infant_hiv.csv. It records the estimated percentage of infants born to women living with HIV who received a HIV test within two months of birth, for each country or region and each year.\nThe data is formatted as follows:\n\nThe first column contains ISO3 country codes for 192 countries.\nFor each year from 2009 to 2017 (9 years in total), there are three columns (estimated percentage, lower bound, upper bound)\nA dash (-) indicates missing data.\nThe analyst tells us that the value &gt;95% means ‚Äúthe data is unreliable‚Äù.\n\nQuestions:\n\nFirst, clean the dataset by finding a way to replace all the missing and unreliable values with NA. (5 points).\nAfter cleaning, How many countries have available estimates (est) for all 9 years from 2009 to 2017? (2.5 points)\nWhat is the average estimated percentage (est) for Azerbaijan (AZE) over the 9 years? (2.5 points)\n\nYou can complete these tasks in multiple steps or create intermediate results as needed.\n\nData source: UNICEF. (2017). Early Infant Diagnosis.\n\n\n\n\nQuestion 2: Summarizing and Plotting\nQ2.1: Bluebikes is Metro Boston‚Äôs public bike share program. You are given a Bluebikes ridership dataset q2_bike_trips.csv. Each row represents a single trip, including information on start time, end time, start station, and end station. The dataset covers trips taken on September 3, 2025, the first day of our fall semester.\nYour tasks:\n\nCalculate how many trips occurred within each hour of the day. Use the lubridate package, focus on the started_at column (2 points).\nAfter you have that, create a graph showing the number of trips per hour. (4 points).\n\nYour graph will look similar to the follow example, but your actual results will be different.\n\nQ2.2: After completing Q2.1, you will have identified the busiest hour of the day (the hour with the most starting trips). Following on that:\n\nSingle out all trips that occurred during this busiest hour. (2 points).\nCount the number of trips starting at each station during this hour. When you have this result, remove stations with less than 10 trips (2 points).\n\n\nData source: Bluebikes System Data. (2025). Bluebikes Comprehensive Trip Histories.\n\n\n\n\nQuestion 3 Combining and Mapping\nYou are also provided a Bluebike station dataset q3_bike_stations.xlsx, which includes station names, ids, locations and total docks at each station.\n\nJoin your cleaned busiest-hour trip dataset (stations with more than 10 trips) with the station dataset. (2 points)\nUse sf package, visualize these counts on a map using the stations‚Äô geographic locations to place points. (8 points).\n\nUse q3_basemap.geojson as your base map.\nUse point size to indicate the number of trips per station.\nRemove any stations without valid location information.\n\n\nYour maps may look similar to the following example, but your actual results can be different. Your theme and color choice may also be different.\n\n\nData source:\nBluebikes System Data. (2025). Bluebikes Stations.\nAnalyze Boston. (2025). Boston neighborhood boundary.\n\n\n\n\nQuestion 4: Trouble-shooting\nThe following code are not running correctly. Can you help identify the issues and fix them? Please briefly list the problems you found and provide the corrected version of the code.\n\nYou want to get county-level ACS data (2019-2023) for calculating poverty rate in Massachusetts. Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (2.5 points).\n\ndata &lt;- get_acs(\n  state = \"MA\",\n  geography = \"county\"\n  year = 2023,\n  table = c(\"B17001_002\", \"B17001_001\")\n)\n\nYou want to obtain total population data for two counties in Massachusetts at the census block group level, using ACS data from 2019‚Äì2023. Suppose tidycensus has been correctly loaded and census_api_key has been successfully run. (2.5 points).\n\ndata &lt;- get_acs(\n  state = \"MA\",\n  county = c(\"Middlesex, Norfolk\"),\n  geography = \"blockgroups\",\n  variables = c(\"B01001_001\")\n)\n\nThe iris data is a built-in dataset in R that records measurements of iris flowers, specifically the length and width of sepals and petals, along with their species. You are taking the two columns Sepal.Length and Sepal.Width to make a simple scatterplot. But the plot does not show. (2.5 points).\n\niris |&gt; \n  ggplot(x = Sepal.Length, y = Sepal.Width) |&gt; \n  geom_point(color = \"red\")\n\nAlso in iris , you want to select ‚Äúsetosa‚Äù species that have a sepal length larger than 5. By looking at the dataset you know the first record satisfies this condition but the result does not show. (2.5 points).\n\niris |&gt; filter(Sepal.Length &gt; 5 AND Species = \"setosa\")\n ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüéâTHIS IS THE END OF THE EXAM üéâ"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Exam Answer Key",
    "section": "",
    "text": "library(tidyverse)\nlibrary(sf)\nlibrary(readxl)"
  },
  {
    "objectID": "about.html#question-1-cleaning-and-transforming",
    "href": "about.html#question-1-cleaning-and-transforming",
    "title": "Exam Answer Key",
    "section": "Question 1: Cleaning and Transforming",
    "text": "Question 1: Cleaning and Transforming\n\ninfant_hiv &lt;- read_csv(\"data/q1_infant_hiv.csv\")\n\n\nQ1.1 Replace all irregular values with NA\nUse pivot_longer to gather values into one column for easier process.\n\ninfant_hiv_cleaned &lt;- \n  infant_hiv |&gt; \n  pivot_longer(cols = `2009 est`:`2017 lo`,\n               names_to = \"year\", values_to = \"value\") |&gt; \n  mutate(value = ifelse(value %in% c(\"-\", \"&gt;95%\"), NA, value))\n\n\n\nQ1.2 Count countries have available estimates (est) for 9 years\n29 countries have available estimates (est) for all 9 years from 2009 to 2017.\n\ninfant_hiv_cleaned &lt;- \n  infant_hiv_cleaned |&gt; \n  # Filter for non-NA and est values\n  filter(str_detect(year, \"est\") & !is.na(value)) \n\ninfant_hiv_cleaned |&gt; \n  # Count estimates by country\n  count(ISO3) |&gt; \n  filter(n == 9) |&gt; \n  nrow()\n\n[1] 29\n\n\n\n\nQ1.3 Average estimate value for AZE\n56.67% for AZE\n\n# Percentages are characters, need to treat % before caculating\ninfant_hiv_cleaned |&gt; \n  filter(ISO3 == \"AZE\") |&gt;  \n  mutate(pct_value = as.numeric(str_replace(value, \"%\", \"\"))) |&gt; \n  summarise(mean = mean(pct_value))\n\n# A tibble: 1 √ó 1\n   mean\n  &lt;dbl&gt;\n1  56.7"
  },
  {
    "objectID": "about.html#question-2-summarizing-and-plotting",
    "href": "about.html#question-2-summarizing-and-plotting",
    "title": "Exam Answer Key",
    "section": "Question 2: Summarizing and Plotting",
    "text": "Question 2: Summarizing and Plotting\n\nbiketrips &lt;- read_csv(\"data/q2_bike_trips.csv\")\n\n\nQ2.1 Number of trips per hour\nBusiest hour: 17:00\n\n# Use `hour()` function to extract hours\nbiketrips &lt;- \n  biketrips |&gt; mutate(hour = hour(started_at)) \n\n# Count to find the busiest hour\nbiketrips |&gt; count(hour) |&gt; arrange(desc(n))\n\n# A tibble: 24 √ó 2\n    hour     n\n   &lt;int&gt; &lt;int&gt;\n 1    17  2370\n 2    18  1864\n 3     8  1751\n 4    16  1617\n 5    19  1361\n 6    15  1190\n 7    14  1016\n 8     9  1000\n 9     7   986\n10    20   870\n# ‚Ñπ 14 more rows\n\n\n\nbiketrips |&gt; \n  count(hour) |&gt; \n  ggplot(aes(x = hour, y = n)) +\n  geom_line() +\n  labs(x = \"Hour\", y = \"Number of Trips Started\",\n       title = \"Bluebike Hourly Trips\",\n       subtitle = \"September 3, 2025\") +\n  theme_minimal() \n\n\n\n\n\n\n\n\n\n\nQ2.2 Count trips by station, filter &gt;10\n\ntrips_17 &lt;- biketrips |&gt; \n  filter(hour == 17)|&gt; \n  count(start_station_id) |&gt; \n  filter(n &gt;= 10)"
  },
  {
    "objectID": "about.html#question-3-combining-and-mapping",
    "href": "about.html#question-3-combining-and-mapping",
    "title": "Exam Answer Key",
    "section": "Question 3 Combining and Mapping",
    "text": "Question 3 Combining and Mapping\n\nstation &lt;- read_xlsx(\"data/q3_bike_stations.xlsx\")\nbasemap &lt;- st_read(\"data/q3_basemap.geojson\")\n\n\n# Join trips by station to the station data\nstation_joined &lt;- left_join(trips_17, station, \n                            by = c(\"start_station_id\" = \"Number\"))\n\n\n# Convert station to spatial data\nstation_sf &lt;- st_as_sf(station_joined, \n                       coords = c(\"Long\", \"Lat\"), crs = 4326)\n\n\nggplot() +\n  geom_sf(data = basemap)+\n  geom_sf(data = station_sf, aes(size = n), color = \"red\", alpha = 0.3)+\n    labs(size = \"Trip Count\",\n         title = \"Bluebike Starting Trip Distribution\", subtitle = \"Stations with more than 10 trips at the hour xx\")+\n  theme_void()"
  },
  {
    "objectID": "about.html#question-4-trouble-shooting",
    "href": "about.html#question-4-trouble-shooting",
    "title": "Exam Answer Key",
    "section": "Question 4: Trouble-shooting",
    "text": "Question 4: Trouble-shooting\nQ4.1 should change table to variables, add comma after ‚Äúcounty‚Äù\n\nget_acs(\n  state = \"MA\",\n  geography = \"county\",\n  year = 2023,\n  variables = c(\"B17001_002\", \"B17001_001\")\n)\n\nQ4.2 should give individual quotes to the county names, geography should be ‚Äúblock group‚Äù, add year.\n\nget_acs(\n  state = \"MA\",\n  county = c(\"Middlesex\", \"Norfolk\"),\n  geography = \"block group\",\n  year = 2023,\n  variables = c(\"B01001_001\")\n)\n\nQ4.3 should put x and y inside aes() . should change the 2nd |&gt; to +.\n\niris |&gt; \n  ggplot(aes(x = Sepal.Length, y = Sepal.Width)) +\n  geom_point(color = \"red\")\n\nQ4.4 should change ‚ÄúAND‚Äù to ‚Äú&‚Äù, add quotes to ‚Äúsetosa‚Äù, and use ‚Äú==‚Äù.\n\niris |&gt; filter(Sepal.Length &gt; 5 & Species == \"setosa\")"
  }
]